import express from "express";
import cors from "cors";
import fetch from "node-fetch";

const app = express();
app.use(cors());
app.use(express.json());
app.use(express.static("public")); // sirve el index.html

// Historial de conversación en memoria
// ⚠️ En producción sería mejor manejarlo por usuario/sesión
let conversationHistory = [
  "Eres un asistente amigable para adultos mayores. Ayudas a responder dudas, recordar medicación, dar recomendaciones de ejercicios y consejos para mantenerse tranquilos."
];

// Endpoint para conectar con Ollama
app.post("/chat", async (req, res) => {
  try {
    const { prompt } = req.body;

    if (!prompt) return res.json({ reply: "⚠️ No se recibió ningún mensaje." });

    // Guardamos el mensaje del usuario en el historial
    conversationHistory.push(`Usuario: ${prompt}`);

    // Preparamos el prompt completo para Ollama
    const fullPrompt = conversationHistory.join("\n") + "\nBot:";

    const response = await fetch("http://localhost:11434/api/generate", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({
        model: "gemma3:4b",
        prompt: fullPrompt,
        stream: false
      }),
    });

    const data = await response.json();
    const botReply = data.response || data.message || "⚠️ No hubo respuesta del modelo.";

    // Guardamos la respuesta del bot en el historial
    conversationHistory.push(`Bot: ${botReply}`);

    res.json({ reply: botReply });
  } catch (err) {
    console.error("Error proxy a Ollama:", err);
    res.status(500).json({ error: "Error al conectar con Ollama" });
  }
});

// Inicializar servidor
app.listen(3000, () => {
  console.log("✅ Servidor corriendo en http://localhost:3000");
});
